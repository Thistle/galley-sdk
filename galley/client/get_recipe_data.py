# Generated by ariadne-codegen
# Source: queries.graphql

from typing import List, Optional

from .base_model import BaseModel
from .fragments import CategoryFields, NutritionFields, UnitFields


class GetRecipeData(BaseModel):
    viewer: "GetRecipeDataViewer"


class GetRecipeDataViewer(BaseModel):
    recipeConnection: "GetRecipeDataViewerRecipeConnection"


class GetRecipeDataViewerRecipeConnection(BaseModel):
    edges: List["GetRecipeDataViewerRecipeConnectionEdges"]
    pageInfo: "GetRecipeDataViewerRecipeConnectionPageInfo"
    totalCount: int


class GetRecipeDataViewerRecipeConnectionEdges(BaseModel):
    node: "GetRecipeDataViewerRecipeConnectionEdgesNode"


class GetRecipeDataViewerRecipeConnectionEdgesNode(BaseModel):
    id: str
    externalName: Optional[str]
    name: str
    notes: Optional[str]
    description: Optional[str]
    media: List["GetRecipeDataViewerRecipeConnectionEdgesNodeMedia"]
    categoryValues: List["GetRecipeDataViewerRecipeConnectionEdgesNodeCategoryValues"]
    dietaryFlagsWithUsages: List[
        "GetRecipeDataViewerRecipeConnectionEdgesNodeDietaryFlagsWithUsages"
    ]
    reconciledNutritionals: (
        "GetRecipeDataViewerRecipeConnectionEdgesNodeReconciledNutritionals"
    )
    recipeItems: List["GetRecipeDataViewerRecipeConnectionEdgesNodeRecipeItems"]
    ingredientsWithUsages: List[
        "GetRecipeDataViewerRecipeConnectionEdgesNodeIngredientsWithUsages"
    ]
    versionConnection: "GetRecipeDataViewerRecipeConnectionEdgesNodeVersionConnection"


class GetRecipeDataViewerRecipeConnectionEdgesNodeMedia(BaseModel):
    altText: Optional[str]
    caption: Optional[str]
    sourceUrl: Optional[str]


class GetRecipeDataViewerRecipeConnectionEdgesNodeCategoryValues(CategoryFields):
    pass


class GetRecipeDataViewerRecipeConnectionEdgesNodeDietaryFlagsWithUsages(BaseModel):
    dietaryFlag: (
        "GetRecipeDataViewerRecipeConnectionEdgesNodeDietaryFlagsWithUsagesDietaryFlag"
    )


class GetRecipeDataViewerRecipeConnectionEdgesNodeDietaryFlagsWithUsagesDietaryFlag(
    BaseModel
):
    id: str
    name: str


class GetRecipeDataViewerRecipeConnectionEdgesNodeReconciledNutritionals(
    NutritionFields
):
    pass


class GetRecipeDataViewerRecipeConnectionEdgesNodeRecipeItems(BaseModel):
    recipeId: Optional[str]
    preparations: List[
        "GetRecipeDataViewerRecipeConnectionEdgesNodeRecipeItemsPreparations"
    ]
    quantity: Optional[float]
    unit: Optional["GetRecipeDataViewerRecipeConnectionEdgesNodeRecipeItemsUnit"]
    subRecipe: Optional[
        "GetRecipeDataViewerRecipeConnectionEdgesNodeRecipeItemsSubRecipe"
    ]
    ingredient: Optional[
        "GetRecipeDataViewerRecipeConnectionEdgesNodeRecipeItemsIngredient"
    ]


class GetRecipeDataViewerRecipeConnectionEdgesNodeRecipeItemsPreparations(BaseModel):
    id: str
    name: str


class GetRecipeDataViewerRecipeConnectionEdgesNodeRecipeItemsUnit(UnitFields):
    pass


class GetRecipeDataViewerRecipeConnectionEdgesNodeRecipeItemsSubRecipe(BaseModel):
    id: str
    name: str
    externalName: Optional[str]
    nutritionalsQuantity: Optional[float]
    nutritionalsUnit: Optional[
        "GetRecipeDataViewerRecipeConnectionEdgesNodeRecipeItemsSubRecipeNutritionalsUnit"
    ]
    reconciledNutritionals: "GetRecipeDataViewerRecipeConnectionEdgesNodeRecipeItemsSubRecipeReconciledNutritionals"


class GetRecipeDataViewerRecipeConnectionEdgesNodeRecipeItemsSubRecipeNutritionalsUnit(
    BaseModel
):
    id: str
    name: str


class GetRecipeDataViewerRecipeConnectionEdgesNodeRecipeItemsSubRecipeReconciledNutritionals(
    NutritionFields
):
    pass


class GetRecipeDataViewerRecipeConnectionEdgesNodeRecipeItemsIngredient(BaseModel):
    locationVendorItems: List[
        "GetRecipeDataViewerRecipeConnectionEdgesNodeRecipeItemsIngredientLocationVendorItems"
    ]
    id: str
    name: str
    externalName: str
    categoryValues: List[
        "GetRecipeDataViewerRecipeConnectionEdgesNodeRecipeItemsIngredientCategoryValues"
    ]


class GetRecipeDataViewerRecipeConnectionEdgesNodeRecipeItemsIngredientLocationVendorItems(
    BaseModel
):
    vendorItems: List[
        "GetRecipeDataViewerRecipeConnectionEdgesNodeRecipeItemsIngredientLocationVendorItemsVendorItems"
    ]


class GetRecipeDataViewerRecipeConnectionEdgesNodeRecipeItemsIngredientLocationVendorItemsVendorItems(
    BaseModel
):
    name: str
    priority: Optional[int]
    ingredientListStr: Optional[str]


class GetRecipeDataViewerRecipeConnectionEdgesNodeRecipeItemsIngredientCategoryValues(
    CategoryFields
):
    pass


class GetRecipeDataViewerRecipeConnectionEdgesNodeIngredientsWithUsages(BaseModel):
    ingredient: (
        "GetRecipeDataViewerRecipeConnectionEdgesNodeIngredientsWithUsagesIngredient"
    )
    usages: List[
        "GetRecipeDataViewerRecipeConnectionEdgesNodeIngredientsWithUsagesUsages"
    ]


class GetRecipeDataViewerRecipeConnectionEdgesNodeIngredientsWithUsagesIngredient(
    BaseModel
):
    locationVendorItems: List[
        "GetRecipeDataViewerRecipeConnectionEdgesNodeIngredientsWithUsagesIngredientLocationVendorItems"
    ]
    id: str
    name: str
    externalName: str
    categoryValues: List[
        "GetRecipeDataViewerRecipeConnectionEdgesNodeIngredientsWithUsagesIngredientCategoryValues"
    ]


class GetRecipeDataViewerRecipeConnectionEdgesNodeIngredientsWithUsagesIngredientLocationVendorItems(
    BaseModel
):
    vendorItems: List[
        "GetRecipeDataViewerRecipeConnectionEdgesNodeIngredientsWithUsagesIngredientLocationVendorItemsVendorItems"
    ]


class GetRecipeDataViewerRecipeConnectionEdgesNodeIngredientsWithUsagesIngredientLocationVendorItemsVendorItems(
    BaseModel
):
    name: str
    priority: Optional[int]
    ingredientListStr: Optional[str]


class GetRecipeDataViewerRecipeConnectionEdgesNodeIngredientsWithUsagesIngredientCategoryValues(
    CategoryFields
):
    pass


class GetRecipeDataViewerRecipeConnectionEdgesNodeIngredientsWithUsagesUsages(
    BaseModel
):
    ancestorRecipes: List[
        "GetRecipeDataViewerRecipeConnectionEdgesNodeIngredientsWithUsagesUsagesAncestorRecipes"
    ]
    quantity: Optional[float]
    unit: Optional[
        "GetRecipeDataViewerRecipeConnectionEdgesNodeIngredientsWithUsagesUsagesUnit"
    ]


class GetRecipeDataViewerRecipeConnectionEdgesNodeIngredientsWithUsagesUsagesAncestorRecipes(
    BaseModel
):
    id: str
    name: str


class GetRecipeDataViewerRecipeConnectionEdgesNodeIngredientsWithUsagesUsagesUnit(
    UnitFields
):
    pass


class GetRecipeDataViewerRecipeConnectionEdgesNodeVersionConnection(BaseModel):
    edges: List["GetRecipeDataViewerRecipeConnectionEdgesNodeVersionConnectionEdges"]


class GetRecipeDataViewerRecipeConnectionEdgesNodeVersionConnectionEdges(BaseModel):
    node: "GetRecipeDataViewerRecipeConnectionEdgesNodeVersionConnectionEdgesNode"


class GetRecipeDataViewerRecipeConnectionEdgesNodeVersionConnectionEdgesNode(BaseModel):
    id: str


class GetRecipeDataViewerRecipeConnectionPageInfo(BaseModel):
    startIndex: Optional[int]
    endIndex: Optional[int]
    hasPreviousPage: Optional[bool]
    hasNextPage: Optional[bool]
